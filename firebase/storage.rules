rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Users can only access their own uploaded images
    match /user_uploads/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && isValidImageUpload();
    }
    
    // Processed prediction results
    match /processed_results/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User profile images
    match /profile_images/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && isValidImageUpload();
    }
    
    // Dog profile images
    match /dog_images/{userId}/{dogId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && isValidImageUpload();
    }
    
    // Public files (read-only for authenticated users)
    match /public/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins
    }
    
    // Helper function for image validation
    function isValidImageUpload() {
      return request.resource.size < 10 * 1024 * 1024 // 10MB limit
        && request.resource.contentType.matches('image/.*');
    }
  }
}